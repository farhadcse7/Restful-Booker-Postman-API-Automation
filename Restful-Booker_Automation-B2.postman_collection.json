{
	"info": {
		"_postman_id": "adfb0f23-23f7-4538-ba94-ca0e2e70108b",
		"name": "Restful-Booker_Automation-B2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31347245"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseData = pm.response.json();\r",
							"\r",
							"// set \"ID\" into enviroment variable\r",
							"pm.environment.set(\"ID\", responseData.bookingid);\r",
							"\r",
							"// First Name Validation\r",
							"pm.test(\"First Name Validation\", function() {\r",
							"    // pm.expect(responseData.booking.firstname).to.eql(\"talha\");\r",
							"    // for using environment variable\r",
							"    pm.expect(responseData.booking.firstname).to.eql(pm.environment.get(\"firstName\"));\r",
							"})\r",
							"\r",
							"// Last Name Validation\r",
							"pm.test(\"Last Name Validation\", function() {\r",
							"    // pm.expect(responseData.booking.lastname).to.eql(\"Brown\");\r",
							"    // for using environment variable\r",
							"    pm.expect(responseData.booking.lastname).to.eql(pm.environment.get(\"lastName\"));\r",
							"})\r",
							"\r",
							"//Checkin Validation\r",
							"pm.test(\"Checkin Validation\", function() {\r",
							"    pm.expect(responseData.booking.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"));\r",
							"})\r",
							"\r",
							"//Checkout Validation\r",
							"pm.test(\"Checkout Validation\", function() {\r",
							"    pm.expect(responseData.booking.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"));\r",
							"})\r",
							"\r",
							"// Validation of Status Code\r",
							"pm.test(\"Status Code Validation\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"// Validation of Response Time\r",
							"pm.test(\"Response Time Validation\", function() {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//Variable First Name\r",
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\", firstName)\r",
							"\r",
							"//Variable Last Name\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"\r",
							"// Date format variable\r",
							"const date = require('moment')\r",
							"const today = date()\r",
							"const today1 = date()\r",
							"\r",
							"// Checkin\r",
							"var checkin = today.subtract(1, 'd').format(\"YYYY-MM-DD\")\r",
							"console.log(checkin)\r",
							"pm.environment.set(\"checkin\", checkin)\r",
							"\r",
							"//Checkout\r",
							"var checkout = today1.add(1, 'd').format(\"YYYY-MM-DD\")\r",
							"console.log(checkout)\r",
							"pm.environment.set(\"checkout\", checkout)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    // \"firstname\": \"talha\",\r\n    // \"lastname\": \"Brown\",\r\n    // \"totalprice\": 111,\r\n    // \"depositpaid\": true,\r\n    // \"bookingdates\": {\r\n    //     \"checkin\": \"2018-01-01\",\r\n    //     \"checkout\": \"2019-01-01\"\r\n    // },\r\n    // \"additionalneeds\": \"Breakfast\"\r\n    // automation using pre-script\r\n    \"firstname\": \"{{firstName}}\",\r\n    \"lastname\": \"{{lastName}}\",\r\n    \"totalprice\": 111,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"{{checkin}}\",\r\n        \"checkout\": \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/booking/",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking Information",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseData = pm.response.json();\r",
							"\r",
							"// First Name Validation\r",
							"pm.test(\"First Name Validation\", function() {\r",
							"    // pm.expect(responseData.firstname).to.eql(\"talha\");\r",
							"    // for using environment variable\r",
							"    pm.expect(responseData.firstname).to.eql(pm.environment.get(\"firstName\"));\r",
							"})\r",
							"\r",
							"// Last Name Validation\r",
							"pm.test(\"Last Name Validation\", function() {\r",
							"    // pm.expect(responseData.lastname).to.eql(\"Brown\");\r",
							"    // for using environment variable\r",
							"    pm.expect(responseData.lastname).to.eql(pm.environment.get(\"lastName\"));\r",
							"})\r",
							"\r",
							"//Checkin Validation\r",
							"pm.test(\"Checkin Validation\", function() {\r",
							"    pm.expect(responseData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"));\r",
							"})\r",
							"\r",
							"//Checkout Validation\r",
							"pm.test(\"Checkout Validation\", function() {\r",
							"    pm.expect(responseData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"));\r",
							"})\r",
							"\r",
							"// Validation of Status Code\r",
							"pm.test(\"Status Code Validation\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"// Validation of Response Time\r",
							"pm.test(\"Response Time Validation\", function() {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1500);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{BaseUrl}}/booking/{{ID}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"booking",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseData = pm.response.json();\r",
							"pm.environment.set(\"Token\", responseData.token);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/auth",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking Information",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseData = pm.response.json();\r",
							"\r",
							"// First Name Validation\r",
							"pm.test(\"Update First Name Validation\", function() {\r",
							"    pm.expect(responseData.firstname).to.eql(\"Rida\");\r",
							"})\r",
							"\r",
							"// Last Name Validation\r",
							"pm.test(\"Update Last Name Validation\", function() {\r",
							"    pm.expect(responseData.lastname).to.eql(\"Sharmin\");\r",
							"})\r",
							"\r",
							"//Checkin Validation\r",
							"pm.test(\"Update Checkin Validation\", function() {\r",
							"    pm.expect(responseData.bookingdates.checkin).to.eql(\"2018-01-01\");\r",
							"})\r",
							"\r",
							"//Checkout Validation\r",
							"pm.test(\"Update Checkout Validation\", function() {\r",
							"    pm.expect(responseData.bookingdates.checkout).to.eql(\"2019-01-01\");\r",
							"})\r",
							"\r",
							"// Validation of Status Code\r",
							"pm.test(\"Update Status Code Validation\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"// Validation of Response Time\r",
							"pm.test(\"Update Response Time Validation\", function() {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"Rida\",\r\n    \"lastname\": \"Sharmin\",\r\n    \"totalprice\": 111,\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"2018-01-01\",\r\n        \"checkout\": \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/booking/{{ID}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"booking",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking Information",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{Token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BaseUrl}}/booking/{{ID}}",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"booking",
						"{{ID}}"
					]
				}
			},
			"response": []
		}
	]
}